{"version":3,"file":"5.chunk.js","sources":["webpack:///src/pages/register/Register.js"],"sourcesContent":["/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright Â© 2014-present Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from 'isomorphic-style-loader/lib/withStyles';\nimport { Row, Col, Grid, Alert } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router';\nimport FacebookLogin from 'react-facebook-login';\n\nimport Widget from '../../components/Widget';\nimport Footer from '../../components/Footer';\n// import s from './Login.scss'; // eslint-disable-line\nimport { registerUser, loginUserWithFacebook} from '../../actions/user';\nimport s from './Register.scss';\n\nclass Register extends React.Component {\n   constructor(props){\n    super(props);\n    this.state={\n      login: '',\n      mobile: '',\n      password: '',\n      type: ''\n    }\n  }\n\n  // static propTypes = {\n  //   title: PropTypes.string.isRequired,\n  // };\n\n  changeLogin(event) {\n    this.setState({ login: event.target.value });\n  }\n\n  changeMobile(event) {\n    this.setState({ mobile: event.target.value });\n  }\n\n  changePassword(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  changeType(event) {\n    this.setState({ type: event.target.value });\n  }\n\n  doRegister(e) {\n    this.props\n      .dispatch(registerUser({ email: this.state.login, password: this.state.password, mobile: this.state.mobile }, this.state.type));\n    e.preventDefault();\n  }\n\n  responseFacebook(response) {\n    if (response.status != \"not_authorized\" && response.status != \"unknown\") {\n      if (response) {\n        // console.log(\"facebook\", response);\n        this.props\n          .dispatch(loginUserWithFacebook(response, this.state.type));\n      }\n    }\n  }\n\n  render() {\n    var userType = this.props.userType; \n\n    const { from } = this.props.location.state || { from: { pathname: '/login' } };\n\n    if (this.props.isRegistered) { // cant access login page while logged in\n      return (\n        <Redirect to={from}/>\n      );\n    }\n\n    if (this.props.isAuthenticated && userType === 'ROLE_GYM') { // cant access login page while logged in\n     const { from } = { from: { pathname: '/app/gym' } };\n      return (\n        <Redirect to={ from }/>\n      );\n    } \n\n    if (this.props.isAuthenticated && userType === 'ROLE_CUSTOMER') { // cant access login page while logged in\n     const { from } = { from: { pathname: '/app/customer' } }; \n      return (\n        <Redirect to={ from }/>\n      );\n    }\n\n    return (\n       <div className={s.root}>\n        <Grid>\n          <Row>\n            <Col xs={10} xsOffset={1} sm={6} smOffset={3} lg={4} lgOffset={4}>\n              <p className=\"text-center\">React Dashboard</p>\n              <Widget className={s.widget}>\n                <h4 className=\"mt-0\">Sign Up</h4>\n                <form className=\"mt\" onSubmit={this.doRegister.bind(this)}>\n                  {\n                    this.props.errorMessage && (\n                      <Alert className=\"alert-sm\" bsStyle=\"danger\">\n                        {this.props.errorMessage}\n                      </Alert>\n                    )\n                  }\n                  <div className=\"form-group\">\n                    <input className=\"form-control no-border\" value={this.state.login} onChange={this.changeLogin.bind(this)} type=\"text\" required name=\"username\" placeholder=\"Email\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <input className=\"form-control no-border\" value={this.state.mobile} onChange={this.changeMobile.bind(this)} type=\"text\" required name=\"mobile\" placeholder=\"Mobile No\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <input className=\"form-control no-border\" value={this.state.password} onChange={this.changePassword.bind(this)} type=\"password\" required name=\"password\" placeholder=\"Password\" />\n                  </div>\n                  <div className=\"form-group\">\n                    <input type=\"radio\" name=\"type\" value=\"gym\" onChange={this.changeType.bind(this)} /> Gym \n                    <input type=\"radio\" name=\"type\" value=\"customer\" onChange={this.changeType.bind(this)} /> Customer\n                  </div>  \n                  <div className=\"clearfix\">\n                    <div className=\"btn-toolbar pull-right\">\n                      <button type=\"submit\" className=\"btn btn-success btn-sm\">{this.props.isFetching ? 'Loading...' : 'Register'}</button>\n                    </div>\n                  </div>\n                </form>\n                <br></br>\n                 <FacebookLogin\n                         appId=\"345501322630290\"\n                         autoLoad={false}\n                         icon=\"fa-facebook\"\n                         fields=\"name,email,picture\"\n                         scope=\"public_profile,user_friends\"\n                         textButton=\"Or Sign up with Facebook\"\n                         disableMobileRedirect={true}\n                         callback={this.responseFacebook.bind(this)}\n                         size={\"small\"}\n                                         >\n                      </FacebookLogin>\n                <div className=\"clearfix\">       \n                   <a className=\"mt-sm pull-right fs-sm\" href=\"/login\">Already have a account Sign in?</a>\n                </div>\n              </Widget>\n            </Col>\n          </Row>\n        </Grid>\n        <Footer className=\"text-center\" />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.auth.isFetching,\n    isRegistered: state.auth.isRegistered,\n    isAuthenticated: state.auth.isAuthenticated,\n    userType: state.auth.userType,\n    errorMessage: state.auth.errorMessage\n  };\n}\n\n\nexport default withRouter(connect(mapStateToProps)(withStyles(s)(Register)));\n\n\n\n// WEBPACK FOOTER //\n// src/pages/register/Register.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AArBA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AA1CA;AAFA;AADA;AADA;AAqDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtDA;AAyDA;;;;AAlIA;AACA;AAoIA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAEA;;;;A","sourceRoot":""}